name: Pizzeria CI Workflow

on:
  workflow_dispatch:
    inputs:
      nom_client:
        description: "Nom du client"
        required: true
      pizzas:
        description: |
          Liste des pizzas au format JSON. Attention aux points importants:
          - Utilisez des guillemets doubles
          - Entourez la liste avec []
          Exemple: ["margherita","reine","calzone"]
        required: true

jobs:
  reception-commande:
    runs-on: ubuntu-latest
    outputs:
      pizzas: ${{ steps.set-output.outputs.pizzas }}
      nom_client: ${{ github.event.inputs.nom_client }}
    steps:
      - name: Message d'accueil
        run: echo "Bienvenue, ${{ github.event.inputs.nom_client }} ! Merci pour votre commande."
      
      - name: Confirmation commande
        run: echo "Commande reçue : ${{ github.event.inputs.pizzas }}"

      - name: Set output pizzas
        id: set-output
        run: echo "::set-output name=pizzas::${{ github.event.inputs.pizzas }}"

  cuisine:
    needs: reception-commande
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pizza: ${{ fromJSON(needs.reception-commande.outputs.pizzas) }}
        taille: ["L", "XL"]
        include:
          - pizza: dessert
            taille: L
    steps:
      - name: Préparer la pizza
        run: echo "Préparation de la pizza '${{ matrix.pizza }}' taille '${{ matrix.taille }}' en cours..."

  livraison:
    needs: cuisine
    runs-on: ubuntu-latest
    concurrency:
      group: livraison
      cancel-in-progress: true
    steps:
      - name: Préparation de la livraison
        run: echo "Préparation de la livraison pour ${{ needs.reception-commande.outputs.nom_client }}"

      - name: Détail des pizzas
        run: echo "Les pizzas sont prêtes à être livrées à ${{ needs.reception-commande.outputs.nom_client }}"

  reclamation:
    needs: livraison
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Créer une issue en cas de réclamation
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --title "Réclamation client : ${{ needs.reception-commande.outputs.nom_client }}" \
            --body "Le client ${{ needs.reception-commande.outputs.nom_client }} a signalé un problème avec sa commande."
